version: '3'

secrets:
  POSTGRES_PASSWORD:
    file: ./secrets/POSTGRES_PASSWORD.txt
  DB_ADMIN_PASS:
    file: ./secrets/DB_ADMIN_PASS.txt
  DB_USER_PASS:
    file: ./secrets/DB_USER_PASS.txt
  ENV_MULTILOAD:
    file: ./secrets/ENV_MULTILOAD.txt

volumes:
  i2b2-db:

networks:
  ## If using our proxy, you should use an additional docker network "common-proxy" for them to communicate (see also the commented line in i2b2-web service)
  # common-proxy:
  #   external: true
  backend:
    external: false


services:
  i2b2-web:
    container_name: i2b2-web
    image: ${IMAGE_NAMESPACE}/i2b2/i2b2-web
    # build:
    #   context: ./web
    #   dockerfile: Dockerfile
    #   args:
    #     WEB_TAG: ${WEB_TAG}
    env_file:
      - .env
    networks:
      - backend
      # - common-proxy
    ## If using a proxy, you should not expose ports, the proxy will do this
    ports:
      - 80:80
    depends_on:
      - i2b2-wildfly

  i2b2-wildfly:
    container_name: i2b2-wildfly
    image: ${IMAGE_NAMESPACE}/i2b2/i2b2-wildfly
    # build:
    #   context: ./wildfly
    #   dockerfile: Dockerfile
    #   args:
    #     WILDFLY_TAG: ${WILDFLY_TAG}
    env_file:
    - .env
    networks:
      - backend
    depends_on:
      i2b2-database:
        condition: service_healthy
    secrets:
      - DB_ADMIN_PASS
      - DB_USER_PASS
      - ENV_MULTILOAD

  i2b2-api:
    container_name: i2b2-api
    image: ${IMAGE_NAMESPACE}/i2b2/i2b2-api
    # build:
    #   context: ./api
    #   dockerfile: Dockerfile
    env_file:
    - .env
    networks:
      - backend
    depends_on:
      i2b2-database:
        condition: service_healthy

  i2b2-database:
    container_name: i2b2-database
    image: ${IMAGE_NAMESPACE}/i2b2/i2b2-database
    # build:
    #   context: ./database
    #   dockerfile: Dockerfile.postgres
    volumes:
      - i2b2-db:/var/lib/postgresql/data
    env_file:
    - .env
    networks:
      - backend
    secrets:
      - DB_ADMIN_PASS
      - DB_USER_PASS
      - POSTGRES_PASSWORD
      - ENV_MULTILOAD
